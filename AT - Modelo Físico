CREATE DATABASE restaurante;
USE restaurante;

CREATE TABLE Cliente (
    id_cliente INT AUTO_INCREMENT PRIMARY KEY,
    nome_completo VARCHAR(100) NOT NULL,
    telefone VARCHAR(15),
    email VARCHAR(50),
    UNIQUE INDEX (email) -- Índice único para evitar duplicação de emails
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE Mesa (
    id_mesa INT AUTO_INCREMENT PRIMARY KEY,
    qtd_clientes INT NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE Reserva (
    id_reserva INT AUTO_INCREMENT PRIMARY KEY,
    horario DATETIME NOT NULL,
    num_pessoas INT NOT NULL,
    status VARCHAR(20) NOT NULL,
    id_cliente INT NOT NULL,
    FOREIGN KEY (id_cliente) REFERENCES Cliente(id_cliente),
    INDEX idx_cliente_reserva (id_cliente) -- Índice para melhorar busca por cliente
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE Pedido (
    id_pedido INT AUTO_INCREMENT PRIMARY KEY,
    id_mesa INT NOT NULL,
    FOREIGN KEY (id_mesa) REFERENCES Mesa(id_mesa),
    INDEX idx_mesa_pedido (id_mesa) 
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE Itens_Cardapio (
    id_item INT AUTO_INCREMENT PRIMARY KEY,
    descricao VARCHAR(100) NOT NULL,
    preco DECIMAL(10, 2) NOT NULL,
    categoria VARCHAR(50),
    INDEX idx_categoria (categoria) 
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE Itens_Pedido (
    id_item INT NOT NULL,
    id_pedido INT NOT NULL,
    quantidade INT NOT NULL,
    PRIMARY KEY (id_item, id_pedido),
    FOREIGN KEY (id_item) REFERENCES Itens_Cardapio(id_item),
    FOREIGN KEY (id_pedido) REFERENCES Pedido(id_pedido),
    INDEX idx_item_pedido (id_item, id_pedido) 
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

DELIMITER $$
CREATE TRIGGER trg_validar_quantidade
BEFORE INSERT ON Item_Pedido
FOR EACH ROW
BEGIN
    IF NEW.quantidade <= 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'A quantidade deve ser maior que zero';
    END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_adicionar_cliente(
    IN p_nome_completo VARCHAR(100),
    IN p_telefone VARCHAR(15),
    IN p_email VARCHAR(50)
)
BEGIN
    INSERT INTO Cliente (nome_completo, telefone, email)
    VALUES (p_nome_completo, p_telefone, p_email);
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_criar_pedido(
    IN p_id_mesa INT,
    OUT p_id_pedido INT
)
BEGIN
    INSERT INTO Pedido (id_mesa) VALUES (p_id_mesa);
    SET p_id_pedido = LAST_INSERT_ID(); 
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_listar_itens_pedido(
    IN p_id_pedido INT
)
BEGIN
    SELECT i.descricao, ip.quantidade, i.preco, (ip.quantidade * i.preco) AS total
    FROM Item_Pedido ip
    JOIN Itens_Cardapio i ON ip.id_item = i.id_item
    WHERE ip.id_pedido = p_id_pedido;
END$$
DELIMITER ;
